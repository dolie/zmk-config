/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 * 
 * üöß GRAVE and NUBS are kind of inverted on MACOS ISO keyboard
 * üöß https://github.com/zmkfirmware/zmk/issues/1861
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    conditional_layers {
      compatible = "zmk,conditional-layers";
      tri_layer {
        if-layers = <1 2>;
        then-layer = <3>;
      };
    };
    behaviors {
      td0: tap_dance_0 {
          compatible = "zmk,behavior-tap-dance";
          label = "TAP_DANCE_0";
          #binding-cells = <0>;
          tapping-term-ms = <200>;
          bindings = <&kp LBKT>, <&kp RBKT>;
      };
      hm: homerow_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS";
          #binding-cells = <2>;
          tapping-term-ms = <150>;
          quick-tap-ms = <0>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
      };
    };
    keymap {
      compatible = "zmk,keymap";

// Hold on bottom row give access to modificators 
// |---| LSHFT | LALT | LCTRL | LCMD |--|   |--| RCMD | RCTRL | RALT | RSHFT |---|

      default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | [  { |
// | CAPS |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | ` ~  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   | , < | . > | / ? | \ "|"|
//                | DEL | LWR TAB | SPC |   | BKSP | RSE RETURN | ESC |
        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &td0
   &kp CAPS  &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp NUBS &hm LSHFT Z &hm LALT X &hm LCTRL C &hm LCMD V &kp B   &kp N &hm RCMD M &hm RCTRL COMMA &hm RALT DOT &hm RSHFT FSLH &kp NUHS
               &kp DEL &lt 1 TAB &kp SPACE   &kp BSPC &lt 2 RET &kp ESC
          >;
      };

      lower_layer {
// -----------------------------------------------------------------------------------------
// | ESC  |     |     |     |     |     |   |PG_UP|HOME | UP  | END |     |      |
// |      |     |     |     |     |     |   |PG_DN| LFT | DWN | RGT |     |      |
// | F12  | F1  | F2  | F3  | F4  | F5  |   | F6  |  F7 | F8  | F9  | F10 | F11  |
//               | DEL | held key | SPC |   | BKSP | Adjust Layer | ESC OTHR |
        bindings = <
   &kp ESC &trans &trans &trans &trans &trans   &kp PG_UP &kp HOME &kp UP   &kp END   &trans  &trans
   &trans  &trans &trans &trans &trans &trans   &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &trans  &trans
   &kp F12 &hm LSHFT F1 &hm LALT F2 &hm LCTRL F3 &hm LCMD F4 &kp F5   &kp F6    &kp F7   &kp F8   &kp F9    &kp F10 &kp F11
                         &trans &trans &trans   &trans &trans &trans
        >;
      };

      raise_layer {
// -----------------------------------------------------------------------------------------
// |  ¬±   |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  _   |
// |  ¬ß   |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  -   |
// |      | "|" |  [  |  ]  |  {  |  }  |   |     |  =  |  +  | RALT|RSHFT|      |
//           | DEL | Adjust Layer | SPC |   | BKSP | held key | ESC OTHR |
                        bindings = <
   &kp TILDE &kp EXCL &kp AT   &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp STAR &kp LPAR &kp RPAR &kp UNDER
   &kp GRAVE &kp N1   &kp N2   &kp N3   &kp N4   &kp N5      &kp N6    &kp N7    &kp N8   &kp N9   &kp N0   &kp MINUS
   &trans    &hm LSHFT PIPE &hm LALT LBKT &hm LCTRL RBKT &hm LCMD LBRC &kp RBRC    &trans    &hm RCMD EQUAL &hm RCTRL PLUS &kp RALT &kp RSHFT &trans
                            &trans   &trans   &trans      &trans    &trans    &trans
        >;
      };

// todo : do not disturb ? + globe emoji ?
      adjust_layer {
// -----------------------------------------------------------------------------------------
// |      |     |  ‚è™  |  ‚èØÔ∏è  |  ‚è©  | üåô  |        |     |     |     |     |     |  üõå   |
// |      |     |  üîâ  |  üîá  |  üîä  | üéôÔ∏è  |  RGB ‚û°Ô∏è | TOG | BRI | BRD | SPI | SPD | EFF   |
// |      |  üåç  |     |  üîÖ  |  üîÜ  |    |    BT ‚û°Ô∏è | CLR | BT1 | BT2 | BT3 | BT4 | BT5  |
//                    |      |      |    |         |     |     |     |
        bindings = <
   &trans &trans &kp C_PREV   &kp C_PP     &kp C_NEXT   &trans                &trans &trans &trans &trans &trans &kp C_PWR
   &trans &trans &kp C_VOL_DN &kp C_MUTE   &kp C_VOL_UP &kp C_VOICE_COMMAND   &rgb_ug RGB_TOG &rgb_ug RGB_BRI &rgb_ug RGB_BRD &rgb_ug RGB_SPI &rgb_ug RGB_SPD &rgb_ug RGB_EFF
   &trans &trans &trans       &kp C_BRI_DN &kp C_BRI_UP &trans                &bt BT_CLR &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_SEL 5
                                                       &trans &trans &trans   &trans &trans &trans
        >;
      };

    };
};
