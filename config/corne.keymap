/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2

/ {
    macros {
      lnudg: layer_n_udg {
        label: "layer_n_udg";
        wait-ms = <0>;
        tap-ms = <0>;
        bindings
          = <&macro_press &mo LOWER>
          , <&macro_tap &rgb_ug RGB_ON>
          , <&macro_pause_for_release>
          , <&macro_release &mo LOWER>
          , <&macro_tap &rgb_ug RGB_OFF>;
      };
    };

    behaviors {
      lut: layer_udg_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "layer_udg_tap";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <200>;
        quick-tap-ms = <200>;
        bindings = <&lnudg>, <&kp>;
        hold-trigger-key-positions = <1>;
      };
    };

    keymap {
      compatible = "zmk,keymap";
      default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | [  { |
// | CAPS |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | ` ~  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   | , < | . > | / ? | \  | |
//                    | GUI | LWR | SPC |   | BKSP| RSE  | ALT |
        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp LBKT
   &kp CAPS  &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp GRAVE &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp NUBS
          &kp LGUI &lut 0 TAB &kp SPACE   &kp BSPC &lt RAISE RET &kp RALT
          >;
      };
      lower_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |PG_UP|HOME | UP  | END |     |      |
// |      |     |     |     |     |     |   |PG_DN| LFT | DWN | RGT |     |      |
// |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
        bindings = <
   &trans  &trans &trans &trans &trans &trans   &kp PG_UP &kp HOME &kp UP   &kp END   &trans &trans
   &trans  &trans &trans &trans &trans &trans   &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &trnas &trans
   &trans  &trans &trans &trans &trans &trans   &trans    &trans   &trans   &trans    &trans &trans
                  &kp LGUI &trans &kp SPACE     &kp RET  &trans   &kp RALT
        >;
      };

      raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
        >;
      };
    };
};
